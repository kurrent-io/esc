name: Release

on:
  push:
    tags:
      - '*'

jobs:
  release:
    name: Release
    strategy:
      matrix:
        include:
          - os: ubuntu-22.04
            arch: amd64
          - os: ubuntu-24.04
            arch: amd64
          - os: ubuntu-24.04
            arch: arm64
          - os: windows-2022
            arch: x64
          - os: macos-13
            arch: x64
          - os: macos-14
            arch: arm64

    runs-on: ${{ (matrix.arch == 'arm64' && matrix.os == 'macos-14') && 'macos-14' || matrix.os }}

    steps:
      - uses: actions/checkout@v2

      - name: Install Rust toolchain
        run: |
          rustup update
          rustup show

      - name: Create version
        id: version
        uses: EventStore/Automations/create-version-label@master
        with:
          type: tag

      - name: Lookup or create release
        uses: EventStore/Automations/lookup-or-create-release@master
        id: release
        with:
          build-type: release
          github-token: ${{ secrets.GH_PAT }}
          version: ${{ steps.version.outputs.version }}

      - name: Packaging
        id: package
        run: .\release.ps1 -Runner "${{ matrix.os }}" -Arch "${{ matrix.arch }}" -Version "${{ steps.release.outputs.version}}"
        shell: pwsh

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
        with:
          upload_url: ${{ steps.release.outputs.upload_url }}
          asset_path: output/${{ steps.package.outputs.artifact_name }}
          asset_name: ${{ steps.package.outputs.artifact_name }}
          asset_content_type: ${{ steps.package.outputs.content_type }}
